version: '3.9'

services:
  nginx:
    build: ./nginx
    env_file:
      - ./config.env
    volumes:
      - nginx_conf:/etc/nginx/sites
      - letsencrypt_certs:/etc/letsencrypt
      - certbot_acme_challenge:/var/www/certbot
      - ./vhosts:/etc/nginx/vhosts
      - ./html:/var/www/html
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped

  certbot:
    build: ./certbot
    env_file:
      - ./config.env
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - certbot_acme_challenge:/var/www/certbot

  cron:
    build: ./cron
    environment:
      COMPOSE_PROJECT_NAME: "${COMPOSE_PROJECT_NAME}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workdir:ro
    restart: unless-stopped

  auction:
    depends_on:
      postgres-auction:
        condition: service_healthy
    container_name: auction
    stdin_open: true
    tty: true
    build:
      context: ../auction
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 5s
      timeout: 5s
      start_period: 5s
      retries: 5
    restart: unless-stopped

  rpc:
    depends_on:
      auction:
        condition: service_healthy
    container_name: rpc
    stdin_open: true
    tty: true
    build:
      context: ../rpc
    restart: unless-stopped

  searcher-arbitrage:
    depends_on:
      auction:
        condition: service_healthy
    container_name: searcher-arbitrage
    stdin_open: true
    tty: true
    build:
      context: ../searcher-arbitrage
    restart: unless-stopped

  backend:
    container_name: backend
    stdin_open: true
    tty: true
    build:
      context: ../backend
    restart: unless-stopped

  frontend:
    container_name: frontend
    stdin_open: true
    tty: true
    build:
      context: ../frontend
    restart: unless-stopped

  postgres-auction:
    image: postgres:15.1
    restart: always
    hostname: auctiondb
    environment:
      POSTGRES_USER: auction
      POSTGRES_PASSWORD: auction
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U auction -d auction'"]
      interval: 10s
      timeout: 60s
      retries: 10
      start_period: 10s
    volumes:
      - ../data/postgres-auction:/var/lib/postgresql/data

volumes:
  nginx_conf:
    external: true
  letsencrypt_certs:
    external: true
  certbot_acme_challenge:
